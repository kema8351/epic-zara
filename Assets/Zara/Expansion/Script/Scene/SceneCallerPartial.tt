<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="System.Xml.Linq.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#
var xelm = XElement.Load(this.Host.ResolveAssemblyReference("$(ProjectDir)\\Assets\\Cabinet\\Xml\\Scene.xml"));
var scenes = from t in xelm.Elements("Scene") select t;
#>
// Generated by T4Template
using System;
using Zara.Expansion.Ui;

namespace Zara.Expansion.ExScene
{
    public partial class SceneCaller
    {
        <#
        foreach (var t in scenes)
        {
            var typeName = t.Attribute("type").Value;
            var sceneName = t.Attribute("scene").Value;
            var stratum = t.Attribute("stratum").Value;

            switch(stratum)
            {
                case "Background":
                case "Resident":
                case "Popup":
                case "Frontmost":
        #>
        public void Load<#= sceneName #>(Action<<#= typeName #>> onLoaded = null) { sceneLoader.Load(onLoaded); }<#
                    break;

                case "Core":
        #>
        public void Load<#= sceneName #>(Action<<#= typeName #>> onLoaded = null, OverlayUiOperator? overlayUiOperator = null) { CoreUiDirector.Instance.ChangeCoreUi<<#= typeName #>>(onLoaded, overlayUiOperator); }<#
                    break;

                case "Overlay":
        #>
        public OverlayUiOperator Show<#= sceneName #>() { return OverlayUiDirector.Instance.Show<<#= typeName #>>(); }<#
                    break;
            }
        } #>
    }
}
